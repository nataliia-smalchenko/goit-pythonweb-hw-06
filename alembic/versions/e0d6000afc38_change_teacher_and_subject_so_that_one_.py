"""Change Teacher and Subject so that one subject can be taught by multiple teachers

Revision ID: e0d6000afc38
Revises: f2f5b6f47186
Create Date: 2025-04-13 08:34:31.027793

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'e0d6000afc38'
down_revision: Union[str, None] = 'f2f5b6f47186'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('teacher_subject',
    sa.Column('teacher_id', sa.Integer(), nullable=False),
    sa.Column('subject_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['subject_id'], ['subjects.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['teacher_id'], ['teachers.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('teacher_id', 'subject_id')
    )
    op.drop_constraint('subjects_teacher_id_fkey', 'subjects', type_='foreignkey')
    op.drop_column('subjects', 'teacher_id')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('subjects', sa.Column('teacher_id', sa.INTEGER(), autoincrement=False, nullable=False))
    op.create_foreign_key('subjects_teacher_id_fkey', 'subjects', 'teachers', ['teacher_id'], ['id'], ondelete='SET NULL')
    op.drop_table('teacher_subject')
    # ### end Alembic commands ###
